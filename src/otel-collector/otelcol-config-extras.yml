# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

# extra settings to be merged into OpenTelemetry Collector configuration
# do not delete this file

## Example configuration for sending data to your own OTLP HTTP backend
## Note: the spanmetrics exporter must be included in the exporters array
## if overriding the traces pipeline.
##
#  exporters:
#    otlphttp/example:
#      endpoint: <your-endpoint-url>
#
#  service:
#    pipelines:
#      traces:
#        exporters: [spanmetrics, otlphttp/example]
exporters:
  datadog:
    traces:
      span_name_as_resource_name: true
      trace_buffer: 500
    hostname: "otelcol-docker"
    api:
      site: ${env:DD_SITE_PARAMETER}
      key: ${env:DD_API_KEY}

processors:
  resource:
    attributes:
      - key: deployment.environment
        value: "otel"
        action: upsert

connectors:
  datadog/connector:
    traces:
      span_name_as_resource_name: true

service:
  pipelines:
    traces:
      processors: [resource, batch]
      exporters: [otlp, debug, spanmetrics, datadog, datadog/connector]
    metrics:
      receivers: [docker_stats, httpcheck/frontend-proxy, otlp, prometheus, redis, spanmetrics, datadog/connector]
      processors: [resource, batch]
      exporters: [otlphttp/prometheus, debug, datadog]
    logs:
      processors: [resource, batch]
      exporters: [opensearch, debug, datadog]
